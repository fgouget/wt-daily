#!/usr/bin/perl
# Copyright (C) 2013-2014 Francois Gouget
use warnings;
use strict;


my $name0=$0;
$name0 =~ s+^.*/++;


sub error(@)
{
    print STDERR "$name0:error: ", @_;
}

#
# Command line parsing
#

my $opt_action;
my $opt_timeout;
my $usage;
while (@ARGV)
{
    my $arg = shift @ARGV;
    if ($arg =~ /^(?:activate|lock|reset|resume|suspend|status)$/)
    {
        $opt_action = $arg;
    }
    elsif ($arg eq "-?" or $arg eq "-h" or $arg eq "--help")
    {
        $usage = 0;
        last;
    }
    elsif ($arg =~ /^[0-9]+$/)
    {
        $opt_timeout = $arg;
    }
    else
    {
        error("unexpected argument '$arg'\n");
        $usage = 2;
        last;
    }
}
if (!defined $usage)
{
    if (!defined $opt_action)
    {
        $opt_action = "suspend";
    }
    elsif ($opt_action eq "resume")
    {
        error("resume is not supported\n");
        $usage = 2;
    }
    $opt_timeout = 3600 if (!defined $opt_timeout);
    # Catch integer overflows, etc.
    my $bad = eval "$opt_timeout < 0";
    $bad = 1 if ($@);
    if ($bad)
    {
        error("invalid timeout '$opt_timeout'\n");
        $usage = 2;
    }
}
if (defined $usage)
{
    if ($usage)
    {
        error("try '$name0 --help' for more information\n");
        exit $usage;
    }
    print "Usage: $name0 [--help] (activate|lock|reset|suspend DURATION|status)\n";

    print "\n";
    print "Controls the screensaver. In particular suspend prevents it from starting for the specified duration or until the process is killed.\n";
    print "Note that this functionality depends on xdg-screensaver.\n";

    print "\n";
    print "Where:\n";
    print "  activate    Activates the screensaver immediately.\n";
    print "  lock        Locks the screen immediately.\n";
    print "  reset       Deactivates the screensaver. The user may still have to unlock it.\n";
    print "  suspend     Prevents the screensaver from starting.\n";
    print "    DURATION  How long, in seconds, the screensaver should be held at bay.\n";
    print "  status      Prints the screensaver status.\n";
    print "  --help, -h  Shows this help message.\n";
    exit 0;
}

# Mac OS X is not supported
my $platform = `uname -s`;
exit 0 if ($platform eq "Darwin");

my $rc;
if ($opt_action =~ /^(?:activate|lock|status)$/)
{
    $rc = system("xdg-screensaver", $opt_action);
}
elsif ($opt_action =~ /^(reset|suspend)$/)
{
    # The goal of suspend is to not have the screensaver run so reset it
    # in case it is already running.
    $rc = system("xdg-screensaver", "reset");
    # Somehow the above xdg-screensaver call is not enough but adding the call
    # below fixes it.
    system("dbus-send --session --dest=org.gnome.ScreenSaver --type=method_call /org/gnome/ScreenSaver org.gnome.ScreenSaver.SetActive boolean:false");
}

if ($opt_action eq "suspend")
{
    # Create a window for xdg-screensaver
    require Gtk2;
    Gtk2->init();
    my $gtk_window = Gtk2::Window->new('toplevel');
    $gtk_window->set_title("disable-screensaver");
    $gtk_window->show;

    # Inhibit the screensaver for as long as the above window exists
    my $hexid = sprintf("0x%x", $gtk_window->window->XWINDOW);
    $rc = system("xdg-screensaver suspend $hexid");
    if (!$rc)
    {
        sleep($opt_timeout);
        # We could reenable the screensaver but simply terminating should be
        # enough system("xdg-screensaver resume $hexid");
    }
}

exit $rc;
